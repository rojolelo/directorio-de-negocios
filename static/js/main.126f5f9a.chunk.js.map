{"version":3,"sources":["components/Header.js","components/Footer.js","components/Listado/ObjetoLista.js","components/Listado.js","components/Add.js","components/BotonAdd.js","components/Listado/ObjetoListaMod.js","components/Moderacion.js","components/Navegacion.js","components/Search.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","Footer","state","type","Component","ObjetoLista","mostrarInfo","_this","setState","prevState","props","infoExtra","_this$props$objeto","objeto","nombre","paginaweb","telefono1","telefono2","correo","descripcion","direccion","colSpan","_this$props$objeto2","this","ciudad","categoria","estado","estadoUpper","slice","toUpperCase","Fragment","onClick","Listado","laLista","listaDeObjetos","lista","Boolean","length","map","i","Listado_ObjetoLista","key","Add","nombreRef","React","createRef","estadoRef","ciudadRef","categoriaRef","telefono1Ref","telefono2Ref","correoRef","paginawebRef","descripcionRef","direccionRef","enviarInformacion","e","preventDefault","current","value","datos","Swal","fire","title","text","add","currentTarget","reset","id","onSubmit","autoFocus","maxlength","ref","placeholder","BotonAdd","ObjetoListaMod","aceptar","borrar","_this$props$objeto3","_this$props$objeto4","Moderacion","clave","email","emailRef","passwordRef","iniciarSesion","password","firebase","auth","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","console","log","then","result","user","logout","mainAddress","window","location","href","replace","signOut","document","assign","listaPorModerar","preLista","keysLista","Object","keys","push","Listado_ObjetoListaMod","_this2","database","on","x","val","logged","currentUser","Navegacion","navegacion","paginaAnterior","paginaSiguiente","paginaActual","paginaFinal","concat","Search","searchRef","search","style","margin","maxLength","onChange","currentValue","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","dbMod","Router","loading","fromDBtoState","directorio","ids","newState","separacionPorPaginas","toConsumableArray","separacion","subSeparacion","splice","listado","components_BotonAdd","components_Search","paginas","pagina","react_router","exact","path","render","components_Listado","components_Navegacion","child","remove","keyValue","update","string","newLista","regex","RegExp","toLowerCase","filter","test","basename","process","components_Header","components_Add","components_Moderacion","components_Footer","App","components_Router","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.126f5f9a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h1 className=\"header text-center nav-link\">\r\n            <Link to={\"/\"}>\r\n                <span>Business Directory</span>\r\n            </Link>\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Footer extends Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <div className=\"footer text-right\">\r\n                <Link to={\"/listadomoderacion\"}>\r\n                    <button type=\"button\" className=\"btn btn-primary\">\r\n                        Moderate\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ObjetoLista extends Component {\r\n    state = {\r\n        mostrarInfo: false\r\n    };\r\n\r\n    mostrarInfo = () => {\r\n        this.setState((prevState, props) => ({\r\n            mostrarInfo: !prevState.mostrarInfo\r\n        }));\r\n    };\r\n\r\n    infoExtra = () => {\r\n        //DATOS SE OBTIENEN DE UN PROPS.OBJETO\r\n        const {\r\n            nombre,\r\n            paginaweb,\r\n            telefono1,\r\n            telefono2,\r\n            correo,\r\n            descripcion,\r\n            direccion\r\n        } = this.props.objeto;\r\n\r\n        if (!this.state.mostrarInfo) return null;\r\n\r\n        return (\r\n            <tr>\r\n                <td className=\"info1\" colSpan=\"1\">\r\n                    <div className=\"info-div-1\">\r\n                        <h3>{nombre}</h3>\r\n                        <p>{paginaweb}</p>\r\n                    </div>\r\n                </td>\r\n                <td className=\"info2\" colSpan=\"2\">\r\n                    <div className=\"info-div-2\">\r\n                        <p>Phone Number 1: {telefono1} </p>\r\n                        <p>Phone Number 2: {telefono2}</p>\r\n                        <p>Email: {correo}</p>\r\n                    </div>\r\n                </td>\r\n                <td className=\"info3\" colSpan=\"2\">\r\n                    <div className=\"info-div-3\">\r\n                        <p>Description: </p>\r\n                        <p>{descripcion} </p>\r\n                        <p>Address: </p>\r\n                        <p>{direccion} </p>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { nombre, ciudad, categoria } = this.props.objeto;\r\n        let { estado } = this.props.objeto;\r\n        let estadoUpper = estado.slice(0, 1).toUpperCase() + estado.slice(1);\r\n        return (\r\n            <React.Fragment>\r\n                <tr className=\"objeto\">\r\n                    <td className=\"objeto-nombre\">{nombre} </td>\r\n                    <td className=\"objeto-estado\">{estadoUpper}</td>\r\n                    <td className=\"objeto-ciudad\">{ciudad}</td>\r\n                    <td className=\"objeto-categoria\">{categoria}</td>\r\n                    <td className=\"objeto-informacion\">\r\n                        <button\r\n                            className=\"objeto-button\"\r\n                            onClick={this.mostrarInfo}\r\n                        >\r\n                            Info\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                {this.infoExtra()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ObjetoLista;\r\n","import React, { Component } from \"react\";\r\nimport ObjetoLista from \"./Listado/ObjetoLista\";\r\n\r\nclass Listado extends Component {\r\n    laLista = () => {\r\n        const listaDeObjetos = this.props.lista;\r\n\r\n        if (!Boolean(listaDeObjetos)) return null;\r\n\r\n        if (listaDeObjetos.length === 0) return null;\r\n        return (\r\n            <React.Fragment>\r\n                {listaDeObjetos.map((objeto, i) => {\r\n                    return <ObjetoLista objeto={objeto} key={i} />;\r\n                })}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n    render() {\r\n        return (\r\n            <table className=\"table table-bordered table-striped\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>State</th>\r\n                        <th>City</th>\r\n                        <th>Category</th>\r\n                        <th>Information</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{this.laLista()}</tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Listado;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass Add extends Component {\r\n    nombreRef = React.createRef();\r\n    estadoRef = React.createRef();\r\n    ciudadRef = React.createRef();\r\n    categoriaRef = React.createRef();\r\n    telefono1Ref = React.createRef();\r\n    telefono2Ref = React.createRef();\r\n    correoRef = React.createRef();\r\n    paginawebRef = React.createRef();\r\n    descripcionRef = React.createRef();\r\n    direccionRef = React.createRef();\r\n\r\n    enviarInformacion = e => {\r\n        e.preventDefault();\r\n\r\n        const nombre = this.nombreRef.current.value;\r\n        const estado = this.estadoRef.current.value;\r\n        const ciudad = this.ciudadRef.current.value;\r\n        const categoria = this.categoriaRef.value;\r\n        const telefono1 = this.telefono1Ref.current.value;\r\n        const telefono2 = this.telefono2Ref.current.value;\r\n        const correo = this.correoRef.current.value;\r\n        const paginaweb = this.paginawebRef.current.value;\r\n        const descripcion = this.descripcionRef.current.value;\r\n        const direccion = this.direccionRef.current.value;\r\n\r\n        const datos = {\r\n            nombre,\r\n            estado,\r\n            ciudad,\r\n            categoria: \"\",\r\n            telefono1,\r\n            telefono2,\r\n            correo,\r\n            paginaweb,\r\n            descripcion,\r\n            direccion\r\n        };\r\n\r\n        if (\r\n            nombre === \"\" ||\r\n            estado === \"\" ||\r\n            ciudad === \"\" ||\r\n            categoria === \"\" ||\r\n            direccion === \"\" ||\r\n            descripcion === \"\"\r\n        ) {\r\n            Swal.fire({\r\n                type: \"error\",\r\n                title: \"Oops...\",\r\n                text: \"Please fill the needed fields.\"\r\n            });\r\n            return null;\r\n        }\r\n\r\n        Swal.fire(\r\n            \"Done!\",\r\n            \"The information, will be soon be checked.\",\r\n            \"success\"\r\n        );\r\n\r\n        this.props.add(datos);\r\n\r\n        e.currentTarget.reset();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"col justify-content-center alert alert-light\"\r\n                id=\"container\"\r\n            >\r\n                <form\r\n                    onSubmit={this.enviarInformacion}\r\n                    className=\"form-horizontal\"\r\n                >\r\n                    <div className=\"formulario form-group row \">\r\n                        <label className=\"control-label col-sm-2\">\r\n                            Business Name:{\" \"}\r\n                        </label>\r\n                        <div className=\"col\">\r\n                            <input\r\n                                autoFocus\r\n                                maxlength=\"35\"\r\n                                className=\"form-control col-sm-10 form-control-lg\"\r\n                                ref={this.nombreRef}\r\n                                type=\"text\"\r\n                                placeholder=\"What's the name of your business?\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"formulario form-group row \">\r\n                        <label className=\"control-label col-sm-2\">State:</label>\r\n                        <div className=\"col-sm-4\">\r\n                            <select\r\n                                ref={this.estadoRef}\r\n                                className=\"form-control\"\r\n                            >\r\n                                <option value=\"amazonas\">Amazonas</option>\r\n                                <option value=\"anzoategui\">Anzoategui</option>\r\n                                <option value=\"apure\">Apure</option>\r\n                                <option value=\"aragua\">Aragua</option>\r\n                                <option value=\"barinas\">Barinas</option>\r\n                                <option value=\"bolivar\">Bolivar</option>\r\n                                <option value=\"carabobo\">Carabobo</option>\r\n                                <option value=\"cojedes\">Cojedes</option>\r\n                                <option value=\"delta_amacuro\">\r\n                                    Delta Amacuro\r\n                                </option>\r\n                                <option value=\"distrito_capital\">\r\n                                    Distrito Capital\r\n                                </option>\r\n                                <option value=\"falcon\">Falcon</option>\r\n                                <option value=\"guarico\">Guarico</option>\r\n                                <option value=\"lara\">Lara</option>\r\n                                <option value=\"merida\">Merida</option>\r\n                                <option value=\"miranda\">Miranda</option>\r\n                                <option value=\"monagas\">Monagas</option>\r\n                                <option value=\"nueva_esparta\">\r\n                                    Nueva Esparta\r\n                                </option>\r\n                                <option value=\"portuguesa\">Portuguesa</option>\r\n                                <option value=\"sucre\">Sucre</option>\r\n                                <option value=\"tachira\">Tachira</option>\r\n                                <option value=\"trujillo\">Trujillo</option>\r\n                                <option value=\"vargas\">Vargas</option>\r\n                                <option value=\"yaracuy\">Yaracuy</option>\r\n                                <option value=\"zulia\">Zulia</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"formulario form-group row\">\r\n                        <label className=\"control-label col-sm-2\">City: </label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                maxlength=\"15\"\r\n                                className=\"form-control\"\r\n                                ref={this.ciudadRef}\r\n                                type=\"text\"\r\n                                placeholder=\"Example: Caracas\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"formulario form-group row\">\r\n                        <label className=\"control-label col-sm-2\">\r\n                            Address:{\" \"}\r\n                        </label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                maxlength=\"135\"\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                ref={this.direccionRef}\r\n                                placeholder=\"Business Address\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"formulario form-group row\">\r\n                        <label className=\"control-label col-sm-2\">\r\n                            Description:{\" \"}\r\n                        </label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                maxlength=\"135\"\r\n                                className=\"form-control\"\r\n                                ref={this.descripcionRef}\r\n                                type=\"text\"\r\n                                placeholder=\"Example: Fast Food\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"formulario form-group row d-none\">\r\n                        <label className=\"control-label col-sm-2\">\r\n                            Category:{\" \"}\r\n                        </label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                ref={this.categoriaRef}\r\n                                type=\"text\"\r\n                                placeholder=\"Electronicos/Comida\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"texto-add\">\r\n                        <h4>Next fields are optional</h4>\r\n                        <h6>\r\n                            We encourage you to fill these field, so will be\r\n                            easier for the client to reach you out.\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"formulario form-group row\">\r\n                        <label className=\"control-label col-sm-2\">\r\n                            Phone Number 1:{\" \"}\r\n                        </label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                maxlength=\"20\"\r\n                                className=\"form-control\"\r\n                                ref={this.telefono1Ref}\r\n                                type=\"text\"\r\n                                placeholder=\"Main Phone Number\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"formulario form-group row\">\r\n                        <label className=\"control-label col-sm-2\">\r\n                            Phone Number 2:{\" \"}\r\n                        </label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                maxlength=\"20\"\r\n                                className=\"form-control\"\r\n                                ref={this.telefono2Ref}\r\n                                type=\"text\"\r\n                                placeholder=\"Secondary Phone Number\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"formulario form-group row\">\r\n                        <label className=\"control-label col-sm-2\">Email</label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                maxlength=\"35\"\r\n                                className=\"form-control\"\r\n                                ref={this.correoRef}\r\n                                type=\"email\"\r\n                                placeholder=\"Business Email\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"formulario form-group row\">\r\n                        <label className=\"control-label col-sm-2\">Web:</label>\r\n                        <div className=\"col-sm-6\">\r\n                            <input\r\n                                maxlength=\"65\"\r\n                                className=\"form-control\"\r\n                                ref={this.paginawebRef}\r\n                                type=\"text\"\r\n                                placeholder=\"Web URL\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col justify-content-center\">\r\n                        <button\r\n                            className=\"btn btn-primary btn-block\"\r\n                            type=\"submit \"\r\n                        >\r\n                            Send\r\n                        </button>\r\n                    </div>\r\n                    <Link to={\"/\"}>\r\n                        <div className=\"col\">\r\n                            <button className=\"btn btn-primary btn-block\">\r\n                                Go back Home{\" \"}\r\n                            </button>\r\n                        </div>\r\n                    </Link>\r\n                    <div className=\"alert alert-warning\" id=\"texto-add-final\">\r\n                        <p>\r\n                            The information will be checked by a moderator, it\r\n                            should be shown in the main webpage in a few days.\r\n                        </p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Add;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass BotonAdd extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"botonAdd text-center alert alert-warning\">\r\n                <p className=\"texto-botonAdd\">\r\n                    Can't find your business in the list?\r\n                </p>\r\n                <Link to={\"/add\"}>\r\n                    <button className=\"add-button\">Add </button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BotonAdd;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ObjetoListaMod extends Component {\r\n    state = {\r\n        mostrarInfo: true\r\n    };\r\n\r\n    mostrarInfo = () => {\r\n        this.setState((prevState, props) => ({\r\n            mostrarInfo: !prevState.mostrarInfo\r\n        }));\r\n    };\r\n\r\n    aceptar = () => {\r\n        const {\r\n            nombre,\r\n            estado,\r\n            ciudad,\r\n            categoria,\r\n            paginaweb,\r\n            telefono1,\r\n            telefono2,\r\n            correo,\r\n            descripcion,\r\n            direccion,\r\n            key\r\n        } = this.props.objeto;\r\n        const datos = {\r\n            nombre,\r\n            estado,\r\n            ciudad,\r\n            categoria,\r\n            telefono1,\r\n            telefono2,\r\n            correo,\r\n            paginaweb,\r\n            descripcion,\r\n            direccion,\r\n            key\r\n        };\r\n\r\n        this.props.aceptar(datos);\r\n    };\r\n\r\n    borrar = () => {\r\n        const {\r\n            nombre,\r\n            estado,\r\n            ciudad,\r\n            categoria,\r\n            paginaweb,\r\n            telefono1,\r\n            telefono2,\r\n            correo,\r\n            descripcion,\r\n            direccion,\r\n            key\r\n        } = this.props.objeto;\r\n        const datos = {\r\n            nombre,\r\n            estado,\r\n            ciudad,\r\n            categoria,\r\n            telefono1,\r\n            telefono2,\r\n            correo,\r\n            paginaweb,\r\n            descripcion,\r\n            direccion,\r\n            key\r\n        };\r\n\r\n        this.props.borrar(datos);\r\n    };\r\n\r\n    infoExtra = () => {\r\n        //DATOS SE OBTIENEN DE UN PROPS.OBJETO\r\n        const {\r\n            nombre,\r\n            paginaweb,\r\n            telefono1,\r\n            telefono2,\r\n            correo,\r\n            descripcion,\r\n            direccion\r\n        } = this.props.objeto;\r\n\r\n        if (!this.state.mostrarInfo) return null;\r\n\r\n        return (\r\n            <tr>\r\n                <td className=\"info1\" colSpan=\"1\">\r\n                    <div className=\"info-div-1\">\r\n                        <h3>{nombre}</h3>\r\n                        <p>{paginaweb}</p>\r\n                    </div>\r\n                </td>\r\n                <td className=\"info2\" colSpan=\"2\">\r\n                    <div className=\"info-div-2\">\r\n                        <p>Phone Number 1: {telefono1} </p>\r\n                        <p>Phone Number 2: {telefono2}</p>\r\n                        <p>Email: {correo}</p>\r\n                    </div>\r\n                </td>\r\n                <td className=\"info3\" colSpan=\"2\">\r\n                    <div className=\"info-div-3\">\r\n                        <p>Description: </p>\r\n                        <p>{descripcion} </p>\r\n                        <p>Address: </p>\r\n                        <p>{direccion} </p>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { nombre, estado, ciudad, categoria } = this.props.objeto;\r\n        return (\r\n            <React.Fragment>\r\n                <tr className=\"objeto\">\r\n                    <td className=\"objeto-nombre\">{nombre} </td>\r\n                    <td className=\"objeto-estado\">{estado}</td>\r\n                    <td className=\"objeto-ciudad\">{ciudad}</td>\r\n                    <td className=\"objeto-categoria\">{categoria}</td>\r\n                    <td className=\"objeto-informacion\">\r\n                        <button\r\n                            className=\"objeto-button\"\r\n                            onClick={this.mostrarInfo}\r\n                        >\r\n                            Info\r\n                        </button>\r\n                        <button\r\n                            className=\"objeto-button\"\r\n                            onClick={this.aceptar}\r\n                        >\r\n                            Accept\r\n                        </button>\r\n                        <button className=\"objeto-button\" onClick={this.borrar}>\r\n                            Delete\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                {this.infoExtra()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ObjetoListaMod;\r\n","import React, { Component } from \"react\";\r\nimport ObjetoListaMod from \"./Listado/ObjetoListaMod\";\r\nimport firebase from \"firebase\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass Moderacion extends Component {\r\n    state = {\r\n        clave: \"\",\r\n        lista: [],\r\n        email: \"\"\r\n    };\r\n\r\n    emailRef = React.createRef();\r\n    passwordRef = React.createRef();\r\n\r\n    componentWillMount() {\r\n        firebase\r\n            .database()\r\n            .ref(\"moderacion\")\r\n            .on(\"value\", x => {\r\n                this.setState({\r\n                    lista: x.val()\r\n                });\r\n            });\r\n    }\r\n\r\n    iniciarSesion = e => {\r\n        e.preventDefault();\r\n        const email = this.emailRef.current.value;\r\n        const password = this.passwordRef.current.value;\r\n\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .catch(error => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                if (errorCode === \"auth/wrong-password\") {\r\n                    Swal.fire({\r\n                        type: \"error\",\r\n                        title: \"Oops...\",\r\n                        text: \"Wrong Password\"\r\n                    });\r\n                } else if (errorCode === \"auth/user-not-found\") {\r\n                    Swal.fire({\r\n                        type: \"error\",\r\n                        title: \"Oops...\",\r\n                        text: \"Are you sure you're and admin? :)\"\r\n                    });\r\n                } else {\r\n                    Swal.fire({\r\n                        type: \"error\",\r\n                        title: \"Oops...\",\r\n                        text: errorMessage\r\n                    });\r\n                    console.log(error);\r\n                }\r\n            })\r\n            .then(result => {\r\n                if (result) {\r\n                    this.setState({\r\n                        email: result.user.email\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    logout = () => {\r\n        const mainAddress = window.location.href.replace(\r\n            \"/listadomoderacion\",\r\n            \"\"\r\n        );\r\n        firebase.auth().signOut();\r\n        document.location.assign(mainAddress);\r\n    };\r\n\r\n    listaPorModerar = () => {\r\n        let preLista = [];\r\n        let keysLista = [];\r\n        let lista = [];\r\n\r\n        if (Boolean(this.state.lista)) {\r\n            preLista = this.state.lista;\r\n\r\n            if (typeof preLista === \"object\") {\r\n                keysLista = Object.keys(preLista);\r\n            }\r\n\r\n            for (let i = 0; i < keysLista.length; i++) {\r\n                lista.push(preLista[keysLista[i]]);\r\n            }\r\n        }\r\n\r\n        if (lista.length === 0) {\r\n            return (\r\n                <React.Fragment>\r\n                    <tr>\r\n                        <td>There is nothing to show</td>\r\n                    </tr>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {lista.map((objeto, i) => {\r\n                    return (\r\n                        <ObjetoListaMod\r\n                            objeto={objeto}\r\n                            key={i}\r\n                            borrar={this.props.borrar}\r\n                            aceptar={this.props.aceptar}\r\n                        />\r\n                    );\r\n                })}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const logged = Boolean(firebase.auth().currentUser);\r\n        console.log(\"Logged\", logged);\r\n        if (logged === false) {\r\n            return (\r\n                <React.Fragment>\r\n                    <div>\r\n                        <h2>Insert your Email and Password</h2>\r\n                    </div>\r\n                    <div>\r\n                        <h4>You need log in in order to moderate</h4>\r\n                    </div>\r\n                    <form onSubmit={this.iniciarSesion}>\r\n                        <div>\r\n                            <label>Email</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                ref={this.emailRef}\r\n                                placeholder=\"Email\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label>Password</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                ref={this.passwordRef}\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"btn btn-primary\" type=\"submit\">\r\n                                Log in\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        // if ((this.state.clave !== \"1234\")) {\r\n        //     return (\r\n        //         <React.Fragment>\r\n        //             <div><h2>Insert MPass </h2></div>\r\n        //             <label>Mpassword</label>\r\n        //             <div>\r\n        //                 <input type=\"text\" placeholder=\"password\" onChange={e => {\r\n        //                     this.setState({\r\n        //                         clave: e.target.value\r\n        //                     })\r\n        //                 }} />\r\n        //             </div>\r\n        //             <div>\r\n        //                 <button type=\"button\" className=\"btn btn-warning\" onClick={this.logout}>Logout</button>\r\n        //             </div>\r\n        //         </React.Fragment>)\r\n        // }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h2 className=\"titulo-moderacion\">Moderation</h2>\r\n\r\n                <table className=\"table table-bordered table-striped\">\r\n                    <tbody>{this.listaPorModerar()}</tbody>\r\n                </table>\r\n                <button type=\"button\" onClick={this.logout}>\r\n                    Logout\r\n                </button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Moderacion;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navegacion extends Component {\r\n    navegacion = () => {\r\n        // RECIBIR PAGINA ACTUAL, Y ULTIMA PAGINA\r\n\r\n        let paginaActual = this.props.paginaActual;\r\n        const paginaFinal = this.props.paginaFinal;\r\n\r\n        if (paginaActual === \"\") paginaActual = 1;\r\n\r\n        if (!Boolean(paginaActual)) return null;\r\n        if (!Boolean(paginaFinal)) return null;\r\n\r\n        let paginaAnterior;\r\n        let paginaSiguiente;\r\n\r\n        if (paginaActual <= 2) {\r\n            paginaAnterior = \"\";\r\n            paginaSiguiente = paginaActual + 1;\r\n        } else {\r\n            paginaAnterior = paginaActual - 1;\r\n            paginaSiguiente = paginaActual + 1;\r\n        }\r\n\r\n        if (paginaActual === paginaFinal) paginaSiguiente = paginaActual;\r\n\r\n        if (paginaActual === paginaFinal && paginaFinal === 1)\r\n            paginaSiguiente = \"\";\r\n\r\n        return (\r\n            <ul className=\"nav nav-pills justify-content-center\">\r\n                <li className=\"nav-item\">\r\n                    <Link to={`/${paginaAnterior}`} className=\"nav-link\">\r\n                        Previous\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <span className=\"nav-link\">{paginaActual}</span>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to={`/${paginaSiguiente}`} className=\"nav-link\">\r\n                        Next\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return <React.Fragment>{this.navegacion()}</React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default Navegacion;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n    searchRef = React.createRef();\r\n    search = e => {\r\n        e.preventDefault();\r\n        this.props.search(this.searchRef.current.value);\r\n    };\r\n    render() {\r\n        const style = {\r\n            margin: \"0 0 15px 0\"\r\n        };\r\n        return (\r\n            <div className=\"justify-content-center searchbar\" style={style}>\r\n                <h4 className=\"control-label text-center\">Search</h4>\r\n                <input\r\n                    autoFocus\r\n                    maxLength=\"40\"\r\n                    className=\"form-control\"\r\n                    onChange={this.search}\r\n                    ref={this.searchRef}\r\n                    type=\"text\"\r\n                    placeholder=\"Type your search\"\r\n                    value={this.props.currentValue}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Listado from \"./Listado\";\r\nimport Add from \"./Add\";\r\nimport BotonAdd from \"./BotonAdd\";\r\nimport Moderacion from \"./Moderacion\";\r\nimport Navegacion from \"./Navegacion\";\r\nimport firebase from \"firebase\";\r\nimport Search from \"./Search\";\r\n\r\n//FIREBASE INIT----------------\r\nvar config = {\r\n    apiKey: \"AIzaSyCbz4cCoC6aj2XaDIpqp4E7uKfUIuLkij0\",\r\n    authDomain: \"directorio-de-negocios-a257b.firebaseapp.com\",\r\n    databaseURL: \"https://directorio-de-negocios-a257b.firebaseio.com\",\r\n    projectId: \"directorio-de-negocios-a257b\",\r\n    storageBucket: \"directorio-de-negocios-a257b.appspot.com\",\r\n    messagingSenderId: \"156581943217\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nconst db = firebase.database().ref(\"directorio\");\r\nconst dbMod = firebase.database().ref(\"moderacion\");\r\n\r\n//-------------------------------\r\n\r\nclass Router extends Component {\r\n    state = {\r\n        lista: [],\r\n        listaPorModerar: [],\r\n        loading: true,\r\n        search: \"\"\r\n    };\r\n\r\n    fromDBtoState = () => {\r\n        //EVERYTIME THERE A UPDATE IT SETS LOADING TO TRUE\r\n        // ITS ON ANOTHER FUNCTION IN ORDER TO AVOID\r\n        // this.setState NOT WORKING PROPERLY\r\n        this.loading();\r\n        db.on(\"value\", x => {\r\n            const directorio = x.val();\r\n            const ids = Object.keys(directorio);\r\n            let newState = [];\r\n            for (let i = 0; i < ids.length; i++) {\r\n                newState.push(directorio[ids[i]]);\r\n            }\r\n            this.setState({\r\n                lista: newState,\r\n                loading: false\r\n            });\r\n        });\r\n    };\r\n\r\n    loading = () => {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    };\r\n\r\n    separacionPorPaginas = datos => {\r\n        let prevState = [...datos];\r\n\r\n        let separacion = [];\r\n        let subSeparacion = [];\r\n\r\n        const objetosPorPagina = 10;\r\n\r\n        while (prevState.length >= 1) {\r\n            subSeparacion = prevState.splice(0, objetosPorPagina);\r\n            separacion.push(subSeparacion);\r\n        }\r\n\r\n        if (separacion.length !== 0) {\r\n            return separacion;\r\n        } else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    listado = separacion => {\r\n        if (Boolean(separacion)) {\r\n            if (this.state.loading) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <h3 className=\"text-center\">Loading...</h3>\r\n                    </React.Fragment>\r\n                );\r\n            } else if (separacion.length === 0) {\r\n                console.log(\"state.length = 0\");\r\n                return (\r\n                    <React.Fragment>\r\n                        <BotonAdd />\r\n\r\n                        <Search\r\n                            search={this.search}\r\n                            currentValue={this.state.search}\r\n                        />\r\n\r\n                        <h3>There are not business to show</h3>\r\n                    </React.Fragment>\r\n                );\r\n            } else {\r\n                return this.paginas(separacion);\r\n            }\r\n        }\r\n    };\r\n\r\n    paginas = lista => {\r\n        //LISTA es el State separado (separacion).\r\n\r\n        if (!Boolean(lista)) return null;\r\n        const paginas = [...lista];\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {paginas.map((pagina, i) => {\r\n                    if (i === 0) {\r\n                        i = \"\";\r\n                    } else {\r\n                        i += 1;\r\n                    }\r\n\r\n                    return (\r\n                        <Route\r\n                            key={i}\r\n                            exact\r\n                            path={`/${i}`}\r\n                            render={() => {\r\n                                return (\r\n                                    <React.Fragment>\r\n                                        <BotonAdd />\r\n\r\n                                        <Search\r\n                                            search={this.search}\r\n                                            currentValue={this.state.search}\r\n                                        />\r\n                                        <Listado lista={pagina} />\r\n                                        <Navegacion\r\n                                            paginaActual={i}\r\n                                            paginaFinal={paginas.length}\r\n                                        />\r\n                                    </React.Fragment>\r\n                                );\r\n                            }}\r\n                        />\r\n                    );\r\n                })}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.fromDBtoState();\r\n    }\r\n\r\n    // BOTONES -------------------\r\n    aceptar = datos => {\r\n        // SE AÑADEN A LA BASE DE DATOS\r\n        // ADDED TO DATABASE\r\n\r\n        db.push(datos, this.fromDBtoState());\r\n\r\n        this.borrar(datos);\r\n    };\r\n\r\n    borrar = datos => {\r\n        // REMOVED FROM DATABASE\r\n        dbMod.child(datos.key).remove();\r\n    };\r\n\r\n    add = datos => {\r\n        // ADDED TO DATABASE MODERATION LIST\r\n        const keyValue = dbMod.push().key;\r\n        datos[\"key\"] = keyValue;\r\n        dbMod.child(keyValue).update(datos);\r\n    };\r\n    // ------------------ BOTONES\r\n\r\n    //Search-----------------\r\n    search = string => {\r\n        this.setState({\r\n            search: string\r\n        });\r\n    };\r\n    //-----------------Search\r\n\r\n    render() {\r\n        let separacion = [];\r\n        let newLista = [];\r\n        if (Boolean(this.state.lista)) {\r\n            if (Boolean(this.state.search) && this.state.search !== \"\") {\r\n                const regex = new RegExp(this.state.search.toLowerCase());\r\n                newLista = this.state.lista.filter(x => {\r\n                    return (\r\n                        regex.test(x.nombre.toLowerCase()) ||\r\n                        regex.test(x.estado.toLowerCase()) ||\r\n                        regex.test(x.ciudad.toLowerCase()) ||\r\n                        // regex.test(x.categoria.toLowerCase()) ||\r\n                        regex.test(x.descripcion.toLowerCase()) ||\r\n                        regex.test(x.correo.toLowerCase()) ||\r\n                        regex.test(x.paginaweb.toLowerCase()) ||\r\n                        regex.test(x.direccion.toLowerCase())\r\n                    );\r\n                });\r\n            } else {\r\n                newLista = this.state.lista;\r\n            }\r\n\r\n            separacion = this.separacionPorPaginas(newLista);\r\n        }\r\n\r\n        return (\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <div className=\"container\">\r\n                    <Header />\r\n\r\n                    <Switch>\r\n                        <Route\r\n                            exact\r\n                            path={\"/add\"}\r\n                            render={() => {\r\n                                //AÑADIR POST\r\n                                return <Add add={this.add} />;\r\n                            }}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path={\"/listadomoderacion\"}\r\n                            render={() => {\r\n                                //MODERACION\r\n                                return (\r\n                                    <Moderacion\r\n                                        objeto={this.state.listaPorModerar}\r\n                                        aceptar={this.aceptar}\r\n                                        borrar={this.borrar}\r\n                                    />\r\n                                );\r\n                            }}\r\n                        />\r\n\r\n                        {this.listado(separacion)}\r\n                    </Switch>\r\n\r\n                    <Footer />\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\nimport Router from \"./components/Router\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}